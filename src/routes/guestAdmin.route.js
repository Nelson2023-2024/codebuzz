import { Router } from "express";
import { Guest } from "../models/Guest.model.js";

const router = Router()

router.post('/admin/guests', async (req, res) => {
    try {
        const { firstName, lastName, email, phone, company } = req.body;

        // Basic validation for required fields
        if (!firstName || !lastName || !email) {
            return res.status(400).json({ error: 'First name, last name, and email are required.' });
        }

        // Create a new Guest instance
        const newGuest = new Guest({
            firstName,
            lastName,
            email,
            phone,
            company,
            // invitationToken is automatically generated by the schema default
            // isActive defaults to true by schema default
        });

        // Save the new guest to the database
        await newGuest.save();

        res.status(201).json({
            message: 'Guest created successfully',
            guest: newGuest
        });
    } catch (error) {
        console.error('Create guest error:', error);
        if (error.code === 11000) { // MongoDB duplicate key error (e.g., email already exists)
            return res.status(400).json({ error: 'A guest with this email already exists.' });
        }
        res.status(500).json({ error: error.message || 'Internal server error during guest creation.' });
    }
});

export {router as guestAdminRoute}